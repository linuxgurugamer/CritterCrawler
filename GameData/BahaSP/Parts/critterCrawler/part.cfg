PART
{
	// --- general parameters ---
	name = critterCrawler
	module = Part
	author = BahamutoD
	
	// --- asset parameters ---
	mesh = model.mu
	rescaleFactor = 1

	// --- node definitions ---
	node_stack_top = 0.0, 0.1269427, 0.0, 0.0, 1.0, 0.0, 2
	node_stack_bottom = 0.0, -0.5483629, 0.0, 0.0, -1.0, 0.0, 1
	
	// --- editor parameters ---
	TechRequired = advancedMotors
	entryCost = 12000
	cost = 6900
	category = Propulsion
	subcategory = 0
	title = Critter Crawler
	manufacturer = Bahamuto Dynamics
	description = The Critter Crawler is a hexapod rover body built to be able to go places that wheeled rovers can not.  Its gripping claws help it to maneuver on low gravity bodies or highly inclined surfaces.
	
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,0,1,1,1
	
	//fx
	fx_exhaustFlame_yellow_tiny = 0.0, -0.075, -0.3, 0.0, 1.0, 0.0, running
	
	sound_vent_medium = engage
	sound_rocket_hard = running
	sound_vent_soft = disengage
	
	// --- standard part parameters ---
	mass = 0.8
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.3
	angularDrag = 2
	crashTolerance = 14
	breakingForce = 100
	breakingTorque = 100
	maxTemp = 2500
	CoMOffset = 0, -0.4, 0
	
	bulkheadProfiles = size0, size1, srf
	tags = baha bd rocket propuls crit crawl

	RESOURCE
	{
		name = LiquidFuel
		amount = 36
		maxAmount = 36
	}

	RESOURCE
	{
		name = Oxidizer
		amount = 44
		maxAmount = 44
	}
	
	
	MODULE
	{
		name = ModuleEngines
		thrustVectorTransformName = thrustTransform
		exhaustDamage = False
		ignitionThreshold = 0.1
		minThrust = 0
		maxThrust = 30
		heatProduction = 300
		fxOffset = 0, 0, 0
		PROPELLANT
		{
			name = LiquidFuel
			ratio = 0.9
			DrawGauge = True
		}
		PROPELLANT
		{
			name = Oxidizer
			ratio = 1.1
			DrawGauge = True
		}
		atmosphereCurve
	 	{
			key = 0 300
			key = 1 250
			key = 4 0.01
	 	}
	}
	
	
	MODULE
	{
		name = AnimatedEngine
		EngineAnimationName = deployEngine
		WaitForAnimation = 0.73
	}

	MODULE
	{
		name = KSPWheelAnimationRemoval
		animationName = retract
	}
	
	MODULE
	{
		name = KSPWheelBase
		WHEEL//this is wheelIndex=0
		{
			colliderName = wheelCollider
			radius = 0.1
			mass = 0.04
			travel = 0.30
			symmetryIndex = 1
		}
		WHEEL//this is wheelIndex=1
		{
			colliderName = wheelCollider2
			radius = 0.1
			mass = 0.04
			travel = 0.30
			symmetryIndex = 0
		}
		WHEEL//this is wheelIndex=2
		{
			colliderName = wheelCollider3
			radius = 0.1
			mass = 0.04
			travel = 0.30
			symmetryIndex = 3
		}
		WHEEL//this is wheelIndex=3
		{
			colliderName = wheelCollider4
			radius = 0.1
			mass = 0.04
			travel = 0.30
			symmetryIndex = 2
		}
		WHEEL//this is wheelIndex=4
		{
			colliderName = wheelCollider5
			radius = 0.1
			mass = 0.04
			travel = 0.30
			symmetryIndex = 5
		}
		WHEEL//this is wheelIndex=5
		{
			colliderName = wheelCollider6
			radius = 0.1
			mass = 0.04
			travel = 0.30
			symmetryIndex = 4
		}
		
		//specify that this is a single-unit; applies forces to this part rather than the parent part
		useParentRigidbody = false
		
		//disable scaling support for now
		allowScaling = false	
		//but just in case it is enabled in the future, these specify the min and max range for the GUI
		minScale = 0.25
		maxScale = 4
		
		//specifies to use the anti-roll function internally, rather than across symmetry parts
		useSelfAntiRoll = true
		//set to full anti-roll
		antiRoll = 1
		
		//give it ~1t of cargo capacity, even on Eve, with some wiggle room for absorbing shocks
		maxLoadRating = 4
		
		//no clue how this should be setup, the original part used 10m/s as the cut-off for motor
		maxSpeed = 12
		
		//can set these higher to simulate additional downforce, but it might become unstable at values>~1.5
		forwardFriction = 1
		sidewaysFriction = 1
		
		//this sets how far off the ground the part will spawn when launched onto the runway/launchpad
		//it should be the distance between the lowest point in the colliders, and the lowest point the wheel can contact
		groundHeightOffset = 0.25
		
		//these values enable/disable the GUI sliders for their respective functions
		//these should all be disabled on the finished part
		showGUISpring = false
		showGUIDamper = false
		showGUIAntiRoll = false
		showGUIScale = false
		showGUIWheelGroup = false
	}
	
	//this handles the 'deploy' animation, and makes sure wheel colliders are only active when deployed
	MODULE
	{
		name = KSPWheelDeployment
		animationName = deploy
		animationLayer = 2
		animationSpeed = 1
	}
	
	//adds temporary colliders to the specified transforms during deploy/retract animation playing
	//offset is specified in part-transform-coordinate space
	MODULE
	{
		name = KSPWheelDeployCollider
		colliderNames = suspensionTraverse1, suspensionTraverse2, suspensionTraverse3, suspensionTraverse4, suspensionTraverse5, suspensionTraverse6
		colliderOffset = 0, -0.2, 0
	}
	
	//this handles the 'walk' animation, linking it to the average of the wheel colliders' speed.
	MODULE
	{
		name = KSPWheelAnimation
		animationName = walk
		animationLayer = 4
		//reads from wheel0, which rotates backwards...
		invertAnimation = true
		//needs to be sped up in order to match linear velocity of the wheel
		animationSpeed = 10
	}
	
	//steering modules, one per wheel collider
	//does not use any steering transforms, only turns the internal steering data
	//only applied to the two front and two rear colliders; the middle ones do not turn
	//front
	MODULE
	{
		name = KSPWheelSteering
		wheelIndex = 0
		//steeringName = steeringTransformNameIfApplicable//unused in this part
		maxSteeringAngle = 16
		steeringAxis = 0, 1, 0
		invertSteering = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUISteerBias = false
		showGUISteerResponse = false
		showGUISteerLimit = false
	}
	MODULE
	{
		name = KSPWheelSteering
		wheelIndex = 1
		maxSteeringAngle = 16
		steeringAxis = 0, 1, 0
		invertSteering = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUISteerBias = false
		showGUISteerResponse = false
		showGUISteerLimit = false
	}
	//rear
	MODULE
	{
		name = KSPWheelSteering
		wheelIndex = 4
		maxSteeringAngle = 16
		steeringAxis = 0, 1, 0
		invertSteering = true
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUISteerBias = false
		showGUISteerResponse = false
		showGUISteerLimit = false
	}
	MODULE
	{
		name = KSPWheelSteering
		wheelIndex = 5
		maxSteeringAngle = 16
		steeringAxis = 0, 1, 0
		invertSteering = true
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUISteerBias = false
		showGUISteerResponse = false
		showGUISteerLimit = false
	}
	
	MODULE
	{
		name = KSPWheelMotor
		wheelIndex = 0
		
		//peak efficiency value of the motor (what RPM it occurs at is determined by powerFactor and a ton of math)
		motorEfficiency = 0.85
		
		//percent of peak power draw that occurs at max RPM under no load
		//this determines
		motorPowerFactor = 0.05
		
		//max motor torque at a steady state stalled condition -- this linearly approaches zero at max RPM
		//this determines max acceleration
		maxMotorTorque = 1
		
		//max RPM of the motor, where torque output is zero and power draw is at its lowest
		//you want to set max RPM to such that the maxDrivenSpeed (speed at max RPM) is slightly lower than the maxSpeed specified in the KSPWheelBase module
		//maxDrivenSpeed = maxRPM * pi*wheelRadius*2 / 60
		maxRPM = 955
		
		//default starting gear ratio
		gearRatio = 1
		
		//all of these wheel-colliders are backwards in the model
		invertMotor = true
		
		//the motors are all setup for tank-steering
		//odd numbers need steering inverted for proper left/right handling
		tankSteering = true
		invertSteering = true	
		
		//disable some of the GUI controls
		showGUIMotorLimit = false
		showGUIMotorInvert = false
		showGUIMotorLock = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUIHalfTrack = false
		showGUIGearRatio = false
		showGUIStats = false
	}
	MODULE
	{
		name = KSPWheelMotor
		wheelIndex = 1
		motorEfficiency = 0.85
		motorPowerFactor = 0.05
		maxMotorTorque = 1
		maxRPM = 955
		gearRatio = 1
		
		//all of these wheel-colliders are backwards in the model
		invertMotor = true
		
		//the motors are all setup for tank-steering
		tankSteering = true
		invertSteering = false	
		
		//disable some of the GUI controls
		showGUIMotorLimit = false
		showGUIMotorInvert = false
		showGUIMotorLock = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUIHalfTrack = false
		showGUIGearRatio = false
		showGUIStats = false
	}
	MODULE
	{
		name = KSPWheelMotor
		wheelIndex = 2
		motorEfficiency = 0.85
		motorPowerFactor = 0.05
		maxMotorTorque = 1
		maxRPM = 955
		gearRatio = 1
		
		//all of these wheel-colliders are backwards in the model
		invertMotor = true
		
		//the motors are all setup for tank-steering
		tankSteering = true
		invertSteering = true	
		
		//disable some of the GUI controls
		showGUIMotorLimit = false
		showGUIMotorInvert = false
		showGUIMotorLock = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUIHalfTrack = false
		showGUIGearRatio = false
		showGUIStats = false
	}
	MODULE
	{
		name = KSPWheelMotor
		wheelIndex = 3
		motorEfficiency = 0.85
		motorPowerFactor = 0.05
		maxMotorTorque = 1
		maxRPM = 955
		gearRatio = 1
		
		//all of these wheel-colliders are backwards in the model
		invertMotor = true
		
		//the motors are all setup for tank-steering
		tankSteering = true
		invertSteering = false	
		
		//disable some of the GUI controls
		showGUIMotorLimit = false
		showGUIMotorInvert = false
		showGUIMotorLock = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUIHalfTrack = false
		showGUIGearRatio = false
		showGUIStats = false
	}
	MODULE
	{
		name = KSPWheelMotor
		wheelIndex = 4
		motorEfficiency = 0.85
		motorPowerFactor = 0.05
		maxMotorTorque = 1
		maxRPM = 955
		gearRatio = 1
		
		//all of these wheel-colliders are backwards in the model
		invertMotor = true
		
		//the motors are all setup for tank-steering
		tankSteering = true
		invertSteering = true	
		
		//disable some of the GUI controls
		showGUIMotorLimit = false
		showGUIMotorInvert = false
		showGUIMotorLock = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUIHalfTrack = false
		showGUIGearRatio = false
		showGUIStats = false
	}
	MODULE
	{
		name = KSPWheelMotor
		wheelIndex = 5
		motorEfficiency = 0.85
		motorPowerFactor = 0.05
		maxMotorTorque = 1
		maxRPM = 955
		gearRatio = 1
		
		//all of these wheel-colliders are backwards in the model
		invertMotor = true
		
		//the motors are all setup for tank-steering
		tankSteering = true
		invertSteering = false	
		
		//disable some of the GUI controls
		showGUIMotorLimit = false
		showGUIMotorInvert = false
		showGUIMotorLock = false
		showGUISteerLock = false
		showGUISteerInvert = false
		showGUIHalfTrack = false
		showGUIGearRatio = false
		showGUIStats = false
	}
	
	//multi-motor UI module - single UI buttons to control all motor module UI functions
	MODULE
	{
		name = KSPWheelMultiMotorUI
		wheelIndices = 0,1,2,3,4,5
		gearRatio = 1
	}
	
	//brakes modules -- one per wheel collider
	MODULE
	{
		name = KSPWheelBrakes
		maxBrakeTorque = 5
		wheelIndex = 0
		showGUIBrakeLimit = false
	}
	MODULE
	{
		name = KSPWheelBrakes
		maxBrakeTorque = 5
		wheelIndex = 1
		showGUIBrakeLimit = false
	}
	MODULE
	{
		name = KSPWheelBrakes
		maxBrakeTorque = 5
		wheelIndex = 2
		showGUIBrakeLimit = false
	}
	MODULE
	{
		name = KSPWheelBrakes
		maxBrakeTorque = 5
		wheelIndex = 3
		showGUIBrakeLimit = false
	}
	MODULE
	{
		name = KSPWheelBrakes
		maxBrakeTorque = 5
		wheelIndex = 4
		showGUIBrakeLimit = false
	}
	MODULE
	{
		name = KSPWheelBrakes
		maxBrakeTorque = 5
		wheelIndex = 5
		showGUIBrakeLimit = false
	}
	
	
	//these modules only need a single one present, even with multiple WCs
	
	//damage module; disables part if speed or load tolerances are exceeded
	MODULE
	{
		name = KSPWheelDamage
	}
	
	//untested -- this allows for in-water propulsion, but only if the wheel colliders at max droop are partially above the water;
	//not sure this part will float high enough
	MODULE
	{
		name = KSPWheelWaterPropulsion	
	}
	
	//particle dust effects for wheel colliders, parameters can be tweaked to increase/decrease dust amounts
	MODULE
	{
		name = KSPWheelDustEffects
		//see module source for full list of parameters....
		//you can adjust nearly every parameter for particles -- size, speed, energy, emission, with min and max ranges that are linked to wheel speed/force/slip values
		//as well as multipliers to increase/decrease the outputs according to wheel spring force, speed, or slip amounts
	}
	//constraints module for...something... really not sure what the constraints are for on this model, as steering transforms are not used at all...
	MODULE
	{
		name = KSPWheelConstraints
		CONSTRAINT
		{
			mover = ftrackSteeringf
			target = fsteeringf
			type = ROTATION
		}
		CONSTRAINT
		{
			target = steering
			mover = trackSteering1
			type = ROTATION
		}
		CONSTRAINT
		{
			target = steering2
			mover = trackSteering2
			type = ROTATION
		}
	}
	MODULE
	{
		name = CritterCrawler
	}
}
